"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[79227],{30299:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>X});var o=n(24246),r=n(71670);const s={description:"The process of rocketchat oauth"},i="RocketChat Oauth flow",a={id:"rocketchat/rocketchat-oauth-process",title:"RocketChat Oauth flow",description:"The process of rocketchat oauth",source:"@site/docs/rocketchat/rocketchat-oauth-process.mdx",sourceDirName:"rocketchat",slug:"/rocketchat/rocketchat-oauth-process",permalink:"/zh-CN/docs/next/rocketchat/rocketchat-oauth-process",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/docusaurus-v2/zh-CN",tags:[],version:"current",lastUpdatedBy:"Gitcoins",lastUpdatedAt:1719734167,formattedLastUpdatedAt:"2024\u5e746\u670830\u65e5",frontMatter:{description:"The process of rocketchat oauth"},sidebar:"woofwoof",previous:{title:"RocketChat Oauth",permalink:"/zh-CN/docs/next/rocketchat/rocketchat-oauth"},next:{title:"Authorization with Microsoft code flow",permalink:"/zh-CN/docs/next/rocketchat/rocketchat-microsoft-oauth"}},c={},X=[{value:"RocketChat Oauth configuration",id:"rocketchat-oauth-configuration",level:2},{value:"Generate LoginURL",id:"generate-loginurl",level:2},{value:"Get authorization code",id:"get-authorization-code",level:2},{value:"Redirect back to server",id:"redirect-back-to-server",level:2},{value:"Get access token and refresh token",id:"get-access-token-and-refresh-token",level:2},{value:"Return the secure data to server",id:"return-the-secure-data-to-server",level:2},{value:"Colletion all user data for login",id:"colletion-all-user-data-for-login",level:2},{value:"About hooks loop",id:"about-hooks-loop",level:2},{value:"Login from the client",id:"login-from-the-client",level:2},{value:"Overview",id:"overview",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"rocketchat-oauth-flow",children:"RocketChat Oauth flow"}),"\n",(0,o.jsx)(t.admonition,{title:"Useful links",type:"info",children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/entra/identity-platform/v2-oauth2-auth-code-flow",children:(0,o.jsx)(t.code,{children:"Microsoft OAuth 2.0 authorization code flow"})})})}),"\n",(0,o.jsx)(t.h2,{id:"rocketchat-oauth-configuration",children:"RocketChat Oauth configuration"}),"\n",(0,o.jsx)(t.h2,{id:"generate-loginurl",children:"Generate LoginURL"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'title="Rocket.Chat/apps/meteor/app/custom-oauth/client/CustomOAuth.ts"',children:"\nasync requestCredential(\n\t\toptions: Meteor.LoginWithExternalServiceOptions = {},\n\t\tcredentialRequestCompleteCallback: (credentialTokenOrError?: string | Error) => void,\n\t) {\n\t\tconst config = await loginServices.loadLoginService<OAuthConfiguration>(this.name);\n\t\tif (!config) {\n\t\t\tif (credentialRequestCompleteCallback) {\n\t\t\t\tcredentialRequestCompleteCallback(new Accounts.ConfigError());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst credentialToken = Random.secret();\n\t\tconst loginStyle = OAuth._loginStyle(this.name, config);\n\n\t\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n\n    // highlight-start\n\t\tconst loginUrl =\n\t\t\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\n\t\t\t\tOAuth._redirectUri(this.name, config),\n\t\t\t)}&response_type=${encodeURIComponent(this.responseType)}` +\n\t\t\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\n\t\t\t\tthis.scope,\n\t\t\t)}`;\n    // highlight-end\n\n\t\tOAuth.launchLogin({\n\t\t\tloginService: this.name,\n\t\t\tloginStyle,\n\t\t\tloginUrl,\n\t\t\tcredentialRequestCompleteCallback,\n\t\t\tcredentialToken,\n\t\t\tpopupOptions: {\n\t\t\t\twidth: 900,\n\t\t\t\theight: 450,\n\t\t\t},\n\t\t});\n\t}\n\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'title="LoginUrl"',children:"https://login.microsoftonline.com/d5e685a9-3e23-42d9-9efa-15cc5c1ce7db/oauth2/authorize?\nclient_id=e3845613-0331-49c0-9f11-fb6a634242d2&\nredirect_uri=https%3A%2F%2F212c-34-92-204-228.ngrok-free.app%2F_oauth%2F365oauth&\nresponse_type=code&\nstate=eyJsb2dpblN0eWxlIjoicmVkaXJlY3Q1LCJjcmVkZW50aWFsV39rZW4iOiJyMHk4Vk54ZlN4MUhmY0lFZXVLbnQ1dnAzNW1aWHM2cHdWTkhzcWRNb1BvIiwiaXNDb3Jkb3ZhIjpmYWxzZSwicmVkaXJlY3RVcmwiOiJodHRwczovLzIxMmMtMzQtOTItMjA0LTIyOC5uf3Jvay1gcmVlLmFwcC9ob21lIn0%3D&\nscope=openid%20profile%20email\n"})}),"\n",(0,o.jsx)(t.h2,{id:"get-authorization-code",children:"Get authorization code"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'title="Code"',children:"code=0.AbcAqYXm1SM-2UKe-hXMXBzn2x4WhOMxA8BJnxH7amNCQtL8APU.AgABBAIAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P8Hjlb9sDQamfLxWl_ukGw1Js8IBAlNSq9K3y6MFvkr-uCDOasVt1WLipwEY2irrnDPJVI78EONQ8P1jdKlIDjt-5sQME63u654FbJGKq8H-AV6YrDtaYxfV7cC0YGEcVlbDwYzT0-NRlHW17I9OXQmF0wyg0FIPqK8EJa-zCKPkGTGwqsPh11Ul5-qv90TxMjsfZPd9KZs2Kixiigtx_otW_S6qhbFHCXQVeSG_sO9W0Vn2avdOiAktEILUOWQo-ZH-wmSxfEzibkjvCZYXEtccP1kDxUhQa5Ck4zQWReIjqf2atH3_74ZhFFGMReKSVujqfO46hA7gd4OY7VVGikGlloUWVSFboMXQvQ1GKi7EJ2DEOiIXVM3Uu4_sl3X4dKShcBjSy4kuHfb8MMpQuUhL4NFmBg7A-qVl4D1muhayPaJyuT2-prggC5ciL7rlgMAWcoGgU5dpC-WujQRQVbva1w1HyGI6QL8biiU_fP0wP6-0mAsNVsBDhuMtoh0VZ2eKbLWGyvLL0pgTh8XiUMte9t5JgL4dSzlVAcHXUK2HWBeHql2J0LsR73arQHMh5QhlRa94JGB1zNtFnXn5xjfvkYDF3zTuxIwJa4JoEtPu9Krnu6-rhA3sHVUNUE6uTBDoIz5udVmAyaa4hNwDEhajSk4qCvEvEgk&\n"})}),"\n",(0,o.jsx)(t.h2,{id:"redirect-back-to-server",children:"Redirect back to server"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'title="Code"',children:"https://212c-34-92-204-228.ngrok-free.app/_oauth/365oauth?\ncode=0.AbcAqYXm1SM-2UKe-hXMXBzn2x4WhOMxA8BJnxH7amNCQtL8APU.AgABBAIAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P8Hjlb9sDQamfLxWl_ukGw1Js8IBAlNSq9K3y6MFvkr-uCDOasVt1WLipwEY2irrnDPJVI78EONQ8P1jdKlIDjt-5sQME63u654FbJGKq8H-AV6YrDtaYxfV7cC0YGEcVlbDwYzT0-NRlHW17I9OXQmF0wyg0FIPqK8EJa-zCKPkGTGwqsPh11Ul5-qv90TxMjsfZPd9KZs2Kixiigtx_otW_S6qhbFHCXQVeSG_sO9W0Vn2avdOiAktEILUOWQo-ZH-wmSxfEzibkjvCZYXEtccP1kDxUhQa5Ck4zQWReIjqf2atH3_74ZhFFGMReKSVujqfO46hA7gd4OY7VVGikGlloUWVSFboMXQvQ1GKi7EJ2DEOiIXVM3Uu4_sl3X4dKShcBjSy4kuHfb8MMpQuUhL4NFmBg7A-qVl4D1muhayPaJyuT2-prggC5ciL7rlgMAWcoGgU5dpC-WujQRQVbva1w1HyGI6QL8biiU_fP0wP6-0mAsNVsBDhuMtoh0VZ2eKbLWGyvLL0pgTh8XiUMte9t5JgL4dSzlVAcHXUK2HWBeHql2J0LsR73arQHMh5QhlRa94JGB1zNtFnXn5xjfvkYDF3zTuxIwJa4JoEtPu9Krnu6-rhA3sHVUNUE6uTBDoIz5udVmAyaa4hNwDEhajSk4qCvEvEgk&\nstate=eyJsb2dpblN0eWxlIjoicmVkaXWERY3QiLCJjcmVkZW50aWFsVG9rZW4iOiJwVjNOcHdRUnlLc21HbUxwc3EtRHlHWjRmeGVwYWl6TXhPRWZmQVNiWmVPIiwiaXNDb3Jkb3ZhIjpmYWxzZSwicmVkaXJlY3RVcmwiOiJodHRwczovLzIxMmMtMzQtOTItMjA0LTIyOC5uZ3Jvay1mcmVlLmFwcC9ob21lIn0%3d&\nsession_state=2e1ade24-bffe-46ef-b1c7-934dc8dfbd00#\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'title="Rocket.Chat/apps/meteor/app/custom-oauth/server/custom_oauth_server.js"',children:"registerService() {\n\t\tconst self = this;\n\t\tOAuth.registerService(this.name, 2, null, async (query) => {\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server registerService query 05\", query);\n\t\t\tconst response = await self.getAccessToken(query);\n\t\t\tconst identity = await self.getIdentity(response.access_token, query);\n\n\t\t\tconst serviceData = {\n\t\t\t\t_OAuthCustom: true,\n\t\t\t\tserverURL: self.serverURL,\n\t\t\t\taccessToken: response.access_token,\n\t\t\t\tidToken: response.id_token,\n\t\t\t\texpiresAt: +new Date() + 1000 * parseInt(response.expires_in, 10),\n\t\t\t};\n\n\t\t\t// only set the token in serviceData if it's there. this ensures\n\t\t\t// that we don't lose old ones (since we only get this on the first\n\t\t\t// log in attempt)\n\t\t\tif (response.refresh_token) {\n\t\t\t\tserviceData.refreshToken = response.refresh_token;\n\t\t\t}\n\n\t\t\t_.extend(serviceData, identity);\n\n\t\t\tconst data = {\n\t\t\t\tserviceData,\n\t\t\t\toptions: {\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: identity.name,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t//logger.debug({ msg: 'RegisterService Data', response });\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server registerService data 05\", data);\n\n\t\t\treturn data;\n\t\t});\n\t}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'title="registerService query"',children:"custom_oauth_server registerService query 05 {\n  code: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.AgABBAIAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P9DwxS3im8tRSDQdtHxq88XUJxfHdm8qXE_sPaboChfsUSBiWTOOWk5wi3gGT_zILXoafj7-Ae9DUsG9gBPYFk4HXNykWKEhJWyHGeXjR1LVwyZV16w9udhzhZFYpSaTg-jEPcv5sFzbgoxviDNcxcIQTzhmrV2C-SfBCV4-qOZJ4lIcP6eAFm1AexMrnpO5fnI2k-mnZS43E3PiNIQsqPQrItEx1miMNxqAshwQ1QIJaCnzUtus6zd4d6cZma08zQy65wn0axWE2TEXleqOoV81t1-hapdyd-ROpobuYk6ImKWI2Aw3hnjJqWCfJvgkxDLk0ycFuRcdUZRUug8DQtypJk7lrG13NJ7Cx2dbAWNTxLT4kwnvYGjLSLqTk9YQCdwmFgcYsGLk4cqlHTCIg4BJ4ETUxOjYlk2TVmD6vgA3MOZSMREwqyyh4s8iZg9bC2qGQkRL26FNlaiBHRMOGMmptBDo7EONp5RGRMz5A2Wnzepx4w3YRtJUfgYdALRNM6d4lh0l22YUyuFja6HFIS4QIRrHjbOHXyIC2w1_nCfcBPfpw4h75Fmf2iJFvmBeRNdlmU3BMCCnZ2rghkfTSohqzwe2HgBNGKo6pmW6o8WONTDnsIaWtEB4aPsBqL2NX5rOEnQMF2yBsNh_KMhziGjJkQy4ikl1mkAFQ',\n  state: 'eyJsb2dpblN0eWxlIjoicmVkaXJlY3QiLCJjcmVkZW50aWFsVG9rZW4iOiJBNnpMMXZEQnNaTkZMTGw0YzE4bW5YQXJsTU9MUU1UMDJyWXpWbkxfcGp0IiwiaXNDb3Jkb3ZhIjpmYWxzZSwicmVkaXJlY3RVcmwiOiJodHRwczovLzIxMmMtMzQtOTItMjA0LTIyOC5uZ3Jvay1mcmVlLmFwcC9ob21lIn0=',\n  session_state: '2e1ade24-bffe-46ef-b1c7-934dc8dfbd00'\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"get-access-token-and-refresh-token",children:"Get access token and refresh token"}),"\n",(0,o.jsx)(t.p,{children:"The RocketChat can use the authorization code to request an access token for the target resource. Authorization codes are short lived. Typically, they expire after about 10 minutes."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'tittle="Rocket.Chat/apps/meteor/app/custom-oauth/server/custom_oauth_server.js"',children:"\tasync getAccessToken(query) {\n\t\tconst config = await ServiceConfiguration.configurations.findOneAsync({ service: this.name });\n\t\tif (!config) {\n\t\t\tthrow new Accounts.ConfigError();\n\t\t}\n\n\t\tlet response = undefined;\n\n\t\tconst headers = {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t'User-Agent': this.userAgent, // http://doc.gitlab.com/ce/api/users.html#Current-user\n\t\t\t'Accept': 'application/json',\n\t\t};\n\t\tconst params = new URLSearchParams({\n\t\t\tcode: query.code,\n\t\t\tredirect_uri: OAuth._redirectUri(this.name, config),\n\t\t\tgrant_type: 'authorization_code',\n\t\t\tstate: query.state,\n\t\t});\n\n\t\t// Only send clientID / secret once on header or payload.\n\t\tif (this.tokenSentVia === 'header') {\n\t\t\tconst b64 = Buffer.from(`${config.clientId}:${OAuth.openSecret(config.secret)}`).toString('base64');\n\t\t\theaders.Authorization = `Basic ${b64}`;\n\t\t} else {\n\t\t\tparams.append('client_secret', config.secret);\n\t\t\tparams.append('client_id', config.clientId);\n\t\t}\n\n\t\ttry {\n\t\t\tconst request = await fetch(`${this.tokenPath}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders,\n\t\t\t\tbody: params,\n\t\t\t});\n\n\t\t\tif (!request.ok) {\n\t\t\t\tthrow new Error(request.statusText);\n\t\t\t}\n\n\t\t\tresponse = await request.json();\n\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getAccessToken 03\", response);\n\n\t\t} catch (err) {\n\t\t\tconst error = new Error(`Failed to complete OAuth handshake with ${this.name} at ${this.tokenPath}. ${err.message}`);\n\t\t\tthrow _.extend(error, { response: err.response });\n\t\t}\n\n\t\tif (response.error) {\n\t\t\t// if the http response was a json object with an error attribute\n\t\t\tthrow new Error(`Failed to complete OAuth handshake with ${this.name} at ${this.tokenPath}. ${response.error}`);\n\t\t} else {\n\t\t\treturn response;\n\t\t}\n\t}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"custom_oauth_server getAccessToken 03 {\n  token_type: 'Bearer',\n  expires_in: '3599',\n  ext_expires_in: '3599',\n  expires_on: '1719714834',\n  access_token: 'PAQABAQIAAAApTwJmzXqdR4BN2miheQMYlbd5ZfbyIQUX1iW0FWGmFGvyjTFuy2zHZ1PoDvLgz0D6hAas62MopvXHFIhX53amdiH8_8t-SAGJsjr--GeBeY4Xa3CBx4-1Wg6KutRkg6nZPb-tOO-JSvdlEwlJ_QqPbv_MKZjoqiDbbK0AwbeiQmQm7uTxfk_EjiXxJGM5nYGoHNeg6rslqYYROsjEw2mFf3kyYYFEbUstPfc6Mc_4t3I8QJTNfC0NELnnNHP1b3khDyXtWEeYgcG4v9bNu3_s8MuUJmF1Cv1oWG8p7uTAmpmt84aQ5lnkO3fcxH4yLOH_CPcYLa8JU4K6EaqW7qq8rlvFCTQk0EzWDfhDjfSXESY8zylhFyOqRKsuBVlUiQ7FU42ukPbNDtdJEcwgOm1m9KIFEU5EDUB7ljyPwF_nwgXHnhF6tsU0XEFR3hCAsp0_TgGvtE5xR7mNHC59ZrY86QpcgTHC3lXyDj58VGgZTiAA',\n  refresh_token: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.AgABAwEAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P_RBLQedJRbR8Ll3VPCsjY6zuGnnG6AaZjrFXJGr7hxvjrMD8Azvdxc2BPjThB6qx9JVac8azajaKio_azzrov5EgHgPxCoX5tIL4mV-Yg98cVi5Xm8kOrCjUupc6l0qXRec5Eq69VHJwIUyJrsxpPc8LsHYwDNoKhPWm7fBVKUW0g5ifxg_RBAF43MJYrC5z65tgBRmXwsRJ7ZgDBqnXelYWLKgd-3HG5MkuRpv3JB8vxGRSS5kKdEExU0VRXJ08MMVNHIX_bdzFKyf8LYB2V1sU7gxnWnTmDgQAwvS0Asp0XE-nPY9JtUs_NkgsWD_JQEXv40ib3kOXWNf07ZnVD0DC4E-qE2G76CoEq0l0OWjH9EHf_xhLr21skTWRnaRnnQ8UN1dpyNrf5ymSkhxvTXNOCA6xZUV_ZhjZmjPixig0-8Qx8xDV4RTqnM2NiV8KiR9sL156j31PIeGEp5cagk_lbBqxU2XwGJ9hKI5JbkN3Jg_YVltVKpfkdv4hYzlD94hkepWngLi7q5Sn-Zv-LAC4F8WguDTPt6GjTtOCTG3Yl6BuiMDiBy4-xYM_5BhTdJ1ZCF8wAm-o86U1F1bWTGMa7KQksPsb6AGFGpRcAhbxfki6lETARM18DMVaogACUASffA0ppkSAKoRofJ9-EvXWqodItnTtFmW9WurbNjd0otb1BRP_EIJqKDjd4IAgwbNT0h2C4rWUMEji6ET1KgHun7AGAUTF2EnawYpEzYomCR-pM',\n  id_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyIsImtpZCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyJ9.eyJhdWQiOiJlMzg0NTYxMy0wMzMxLTQ5YzAtOWYxMS1mYjZhNjM0MjQyZDIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9kNWU2ODVhOS0zZTIzLTQyZDktOWVmYS0xNWNjNWMxY2U3ZGIvIiwiaWF0IjoxNzE5NzEwOTM0LCJuYmYiOjE3MTk3MTA5MzQsImV4cCI6MTcxOTcxNDgzNCwiYW1yIjpbInB3ZCIsIm1mYSJdLCJmYW1pbHlfbmFtZSI6Ikd1bXAiLCJnaXZlbl9uYW1lIjoiRm9ycmVzdCIsImlwYWRkciI6IjIyMy4xMDQuNDIuODciLCJuYW1lIjoiRm9ycmVzdCBHdW1wIiwib2lkIjoiOTBmNzU5NmItODhiNi00NzY4LTgyMDQtOGM0NzZhNzNmZTI1IiwicmgiOiIwLkFiY0FxWVhtMVNNLTJVS2UtaFhNWEJ6bjJ4TldoT014QThCSm54SDdhbU5DUXRMOEFQVS4iLCJzdWIiOiJLR2NlTEgtSG9FTklONUg0alZ3d2FMSTJydHBILVMyQ1RuSkNIQTB5MGFrIiwidGlkIjoiZDVlNjg1YTktM2UyMy00MmQ5LTllZmEtMTVjYzVjMWNlN2RiIiwidW5pcXVlX25hbWUiOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1cG4iOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1dGkiOiJGSkI0a0xDRnlVV21ud1ZvdE93OEFRIiwidmVyIjoiMS4wIn0.oGP8qczVpNjzG03en1LmF6BcxOHsSsdU5yNDFDzR7nJsNbnIniPFg8Q9Qr6WWknEvrCGdjMWWf9_7lC6HxK6pr0w28txFOwbPsX_sKFXQBgzTzBUhKuVYmaMv9koFf4UhODyncmDtfiEicBKtOEGf3Rqz534hTXmHXPb9wLIz4_SfmZAa_nuV8my7oBYrrY95rRE-ZfsV5DCoSbu3AiIK4_n21EYfKVE_6J6S46X8r5WeQvLOQ1A4CEZI2lIAToWdT2T1fVYxrsMpNpcfcHtGF6HaD1h_0rmy_QOgZ8nClDI2tx-DnTWLjMoqNCzWFY1p1nLPx_60xqACFqVl_3vdQ'\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"return-the-secure-data-to-server",children:"Return the secure data to server"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",metastring:'tittle="Rocket.Chat/apps/meteor/app/custom-oauth/server/custom_oauth_server.js"',children:"\tasync getIdentity(accessToken) {\n\t\tconst params = {};\n\t\tconst headers = {\n\t\t\t'User-Agent': this.userAgent, // http://doc.gitlab.com/ce/api/users.html#Current-user\n\t\t\t'Accept': 'application/json',\n\t\t};\n\n\t\tif (this.identityTokenSentVia === 'header') {\n\t\t\theaders.Authorization = `Bearer ${accessToken}`;\n\t\t} else {\n\t\t\tparams[this.accessTokenParam] = accessToken;\n\t\t}\n\n\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity path 12\", this.identityPath);\n\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity headers 12\", headers);\n\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity params 12\", params);\n\n\t\ttry {\n\t\t\tconst request = await fetch(`${this.identityPath}`, { method: 'GET', headers, params });\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity request 12\", request);\n\n\t\t\tif (!request.ok) {\n\t\t\t\tthrow new Error(request.statusText);\n\t\t\t}\n\n\t\t\tconst response = await request.json();\n\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity 04\", response);\n\n\t\t\treturn this.normalizeIdentity(response);\n\t\t} catch (err) {\n\t\t\tconst error = new Error(`Failed to fetch identity from ${this.name} at ${this.identityPath}. ${err.message}`);\n\t\t\tthrow _.extend(error, { response: err.response });\n\t\t}\n\t}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity path 12 https://login.microsoftonline.com/d5e685a9-3e23-42d9-9efa-15cc5c1ce7db/openid/userinfo\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity headers 12 {\n  'User-Agent': 'Meteor/METEOR@2.15',\n  Accept: 'application/json',\n  Authorization: 'Bearer PAQABAQIAAAApTwJmzXqdR4BN2miheQMYlbd5ZfbyIQUX1iW0FWGmFGvyjTFuy2zHZ1PoDvLgz0D6hAas62MopvXHFIhX53amdiH8_8t-SAGJsjr--GeBeY4Xa3CBx4-1Wg6KutRkg6nZPb-tOO-JSvdlEwlJ_QqPbv_MKZjoqiDbbK0AwbeiQmQm7uTxfk_EjiXxJGM5nYGoHNeg6rslqYYROsjEw2mFf3kyYYFEbUstPfc6Mc_4t3I8QJTNfC0NELnnNHP1b3khDyXtWEeYgcG4v9bNu3_s8MuUJmF1Cv1oWG8p7uTAmpmt84aQ5lnkO3fcxH4yLOH_CPcYLa8JU4K6EaqW7qq8rlvFCTQk0EzWDfhDjfSXESY8zylhFyOqRKsuBVlUiQ7FU42ukPbNDtdJEcwgOm1m9KIFEU5EDUB7ljyPwF_nwgXHnhF6tsU0XEFR3hCAsp0_TgGvtE5xR7mNHC59ZrY86QpcgTHC3lXyDj58VGgZTiAA'\n}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"XXXXXXXXXXXXXXXXXXXx custom_oauth_server getIdentity 04 {\n  amr: '[\"pwd\",\"mfa\"]',\n  family_name: 'Gump',\n  given_name: 'Forrest',\n  ipaddr: '223.104.42.87',\n  name: 'Forrest Gump',\n  oid: '90f7596b-88b6-4768-8204-8c476a73fe25',\n  rh: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.',\n  sub: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n  tid: 'd5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n  unique_name: 'ForrestGump@Gitcoins.onmicrosoft.com',\n  upn: 'ForrestGump@Gitcoins.onmicrosoft.com',\n  uti: 'H1zdM7Pmbk2z9qeOOQUsAQ',\n  ver: '1.0'\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"colletion-all-user-data-for-login",children:"Colletion all user data for login"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"\tregisterService() {\n\t\tconst self = this;\n\t\tOAuth.registerService(this.name, 2, null, async (query) => {\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server registerService query 05\", query);\n\t\t\tconst response = await self.getAccessToken(query);\n\t\t\tconst identity = await self.getIdentity(response.access_token, query);\n\n\t\t\tconst serviceData = {\n\t\t\t\t_OAuthCustom: true,\n\t\t\t\tserverURL: self.serverURL,\n\t\t\t\taccessToken: response.access_token,\n\t\t\t\tidToken: response.id_token,\n\t\t\t\texpiresAt: +new Date() + 1000 * parseInt(response.expires_in, 10),\n\t\t\t};\n\n\t\t\t// only set the token in serviceData if it's there. this ensures\n\t\t\t// that we don't lose old ones (since we only get this on the first\n\t\t\t// log in attempt)\n\t\t\tif (response.refresh_token) {\n\t\t\t\tserviceData.refreshToken = response.refresh_token;\n\t\t\t}\n\n\t\t\t_.extend(serviceData, identity);\n\n\t\t\tconst data = {\n\t\t\t\tserviceData,\n\t\t\t\toptions: {\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: identity.name,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\n\t\t\t//logger.debug({ msg: 'RegisterService Data', response });\n\t\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server registerService data 05\", data);\n\n\t\t\treturn data;\n\t\t});\n }\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"XXXXXXXXXXXXXXXXXXXx custom_oauth_server registerService data 05 {\n  serviceData: {\n    _OAuthCustom: true,\n    serverURL: 'https://login.microsoftonline.com/d5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n    accessToken: 'PAQABAQIAAAApTwJmzXqdR4BN2miheQMYlbd5ZfbyIQUX1iW0FWGmFGvyjTFuy2zHZ1PoDvLgz0D6hAas62MopvXHFIhX53amdiH8_8t-SAGJsjr--GeBeY4Xa3CBx4-1Wg6KutRkg6nZPb-tOO-JSvdlEwlJ_QqPbv_MKZjoqiDbbK0AwbeiQmQm7uTxfk_EjiXxJGM5nYGoHNeg6rslqYYROsjEw2mFf3kyYYFEbUstPfc6Mc_4t3I8QJTNfC0NELnnNHP1b3khDyXtWEeYgcG4v9bNu3_s8MuUJmF1Cv1oWG8p7uTAmpmt84aQ5lnkO3fcxH4yLOH_CPcYLa8JU4K6EaqW7qq8rlvFCTQk0EzWDfhDjfSXESY8zylhFyOqRKsuBVlUiQ7FU42ukPbNDtdJEcwgOm1m9KIFEU5EDUB7ljyPwF_nwgXHnhF6tsU0XEFR3hCAsp0_TgGvtE5xR7mNHC59ZrY86QpcgTHC3lXyDj58VGgZTiAA',\n    idToken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyIsImtpZCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyJ9.eyJhdWQiOiJlMzg0NTYxMy0wMzMxLTQ5YzAtOWYxMS1mYjZhNjM0MjQyZDIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9kNWU2ODVhOS0zZTIzLTQyZDktOWVmYS0xNWNjNWMxY2U3ZGIvIiwiaWF0IjoxNzE5NzEwOTM0LCJuYmYiOjE3MTk3MTA5MzQsImV4cCI6MTcxOTcxNDgzNCwiYW1yIjpbInB3ZCIsIm1mYSJdLCJmYW1pbHlfbmFtZSI6Ikd1bXAiLCJnaXZlbl9uYW1lIjoiRm9ycmVzdCIsImlwYWRkciI6IjIyMy4xMDQuNDIuODciLCJuYW1lIjoiRm9ycmVzdCBHdW1wIiwib2lkIjoiOTBmNzU5NmItODhiNi00NzY4LTgyMDQtOGM0NzZhNzNmZTI1IiwicmgiOiIwLkFiY0FxWVhtMVNNLTJVS2UtaFhNWEJ6bjJ4TldoT014QThCSm54SDdhbU5DUXRMOEFQVS4iLCJzdWIiOiJLR2NlTEgtSG9FTklONUg0alZ3d2FMSTJydHBILVMyQ1RuSkNIQTB5MGFrIiwidGlkIjoiZDVlNjg1YTktM2UyMy00MmQ5LTllZmEtMTVjYzVjMWNlN2RiIiwidW5pcXVlX25hbWUiOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1cG4iOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1dGkiOiJGSkI0a0xDRnlVV21ud1ZvdE93OEFRIiwidmVyIjoiMS4wIn0.oGP8qczVpNjzG03en1LmF6BcxOHsSsdU5yNDFDzR7nJsNbnIniPFg8Q9Qr6WWknEvrCGdjMWWf9_7lC6HxK6pr0w28txFOwbPsX_sKFXQBgzTzBUhKuVYmaMv9koFf4UhODyncmDtfiEicBKtOEGf3Rqz534hTXmHXPb9wLIz4_SfmZAa_nuV8my7oBYrrY95rRE-ZfsV5DCoSbu3AiIK4_n21EYfKVE_6J6S46X8r5WeQvLOQ1A4CEZI2lIAToWdT2T1fVYxrsMpNpcfcHtGF6HaD1h_0rmy_QOgZ8nClDI2tx-DnTWLjMoqNCzWFY1p1nLPx_60xqACFqVl_3vdQ',\n    expiresAt: 1719714834151,\n    refreshToken: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.AgABAwEAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P_RBLQedJRbR8Ll3VPCsjY6zuGnnG6AaZjrFXJGr7hxvjrMD8Azvdxc2BPjThB6qx9JVac8azajaKio_azzrov5EgHgPxCoX5tIL4mV-Yg98cVi5Xm8kOrCjUupc6l0qXRec5Eq69VHJwIUyJrsxpPc8LsHYwDNoKhPWm7fBVKUW0g5ifxg_RBAF43MJYrC5z65tgBRmXwsRJ7ZgDBqnXelYWLKgd-3HG5MkuRpv3JB8vxGRSS5kKdEExU0VRXJ08MMVNHIX_bdzFKyf8LYB2V1sU7gxnWnTmDgQAwvS0Asp0XE-nPY9JtUs_NkgsWD_JQEXv40ib3kOXWNf07ZnVD0DC4E-qE2G76CoEq0l0OWjH9EHf_xhLr21skTWRnaRnnQ8UN1dpyNrf5ymSkhxvTXNOCA6xZUV_ZhjZmjPixig0-8Qx8xDV4RTqnM2NiV8KiR9sL156j31PIeGEp5cagk_lbBqxU2XwGJ9hKI5JbkN3Jg_YVltVKpfkdv4hYzlD94hkepWngLi7q5Sn-Zv-LAC4F8WguDTPt6GjTtOCTG3Yl6BuiMDiBy4-xYM_5BhTdJ1ZCF8wAm-o86U1F1bWTGMa7KQksPsb6AGFGpRcAhbxfki6lETARM18DMVaogACUASffA0ppkSAKoRofJ9-EvXWqodItnTtFmW9WurbNjd0otb1BRP_EIJqKDjd4IAgwbNT0h2C4rWUMEji6ET1KgHun7AGAUTF2EnawYpEzYomCR-pM',\n    amr: '[\"pwd\",\"mfa\"]',\n    family_name: 'Gump',\n    given_name: 'Forrest',\n    ipaddr: '223.104.42.87',\n    name: 'Gump',\n    oid: '90f7596b-88b6-4768-8204-8c476a73fe25',\n    rh: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.',\n    sub: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n    tid: 'd5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n    unique_name: 'ForrestGump@Gitcoins.onmicrosoft.com',\n    upn: 'ForrestGump@Gitcoins.onmicrosoft.com',\n    uti: 'H1zdM7Pmbk2z9qeOOQUsAQ',\n    ver: '1.0',\n    id: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n    username: 'Forrest',\n    email: 'ForrestGump@Gitcoins.onmicrosoft.com'\n  }\n"})}),"\n",(0,o.jsx)(t.h2,{id:"about-hooks-loop",children:"About hooks loop"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"const { updateOrCreateUserFromExternalService } = Accounts;\nconst updateOrCreateUserFromExternalServiceAsync = async function (...args /* serviceName, serviceData, options*/) {\n\tfor await (const hook of BeforeUpdateOrCreateUserFromExternalService) {\n\t\tconsole.log(\"XXXXXXXXXXXXXXXXXXXx custom_oauth_server hook hook hook hook hook XXXXXXXXXXXXXXXXXXXXXXXXXXx\");\n\t\tawait hook.apply(this, args);\n\t}\n\n\tconst [serviceName, serviceData] = args;\n\n\tconst user = updateOrCreateUserFromExternalService.apply(this, args);\n\tconst fullUser = await Users.findOneById(user.userId);\n\tif (settings.get('LDAP_Update_Data_On_OAuth_Login')) {\n\t\tawait LDAP.loginAuthenticatedUserRequest(fullUser.username);\n\t}\n\n\tawait callbacks.run('afterValidateNewOAuthUser', {\n\t\tidentity: serviceData,\n\t\tserviceName,\n\t\tuser: fullUser,\n\t});\n\n\treturn user;\n};\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:'addHookToProcessUser() {\n\t\tBeforeUpdateOrCreateUserFromExternalService.push(async (serviceName, serviceData /* , options*/) => {\n\n\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser serviceName 12", serviceName);\n\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser this.name 12", this.name);\n\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser this.keyField 12", this.keyField);\n\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser serviceData 12", serviceData);\n\n\t\t\tif (serviceName !== this.name) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (serviceData.username) {\n\t\t\t\tlet user = undefined;\n\n\t\t\t\tif (this.keyField === \'username\') {\n\t\t\t\t\tuser = this.mergeUsersDistinctServices\n\t\t\t\t\t\t? await Users.findOneByUsernameIgnoringCase(serviceData.username)\n\t\t\t\t\t\t: await Users.findOneByUsernameAndServiceNameIgnoringCase(serviceData.username, serviceData.id, serviceName);\n\t\t\t\t} else if (this.keyField === \'email\') {\n\t\t\t\t\tuser = this.mergeUsersDistinctServices\n\t\t\t\t\t\t? await Users.findOneByEmailAddress(serviceData.email)\n\t\t\t\t\t\t: await Users.findOneByEmailAddressAndServiceNameIgnoringCase(serviceData.email, serviceData.id, serviceName);\n\t\t\t\t}\n\n\t\t\t\tif (!user) {\n\t\t\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXx gitcoins return 1");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait callbacks.run(\'afterProcessOAuthUser\', { serviceName, serviceData, user });\n\t\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXx gitcoins user 18", user);\n\n\t\t\t\t// User already created or merged and has identical name as before\n\t\t\t\tif (\n\t\t\t\t\tuser.services &&\n\t\t\t\t\tuser.services[serviceName] &&\n\t\t\t\t\tuser.services[serviceName].id === serviceData.id &&\n\t\t\t\t\tuser.name === serviceData.name &&\n\t\t\t\t\t(this.keyField === \'email\' || !serviceData.email || user.emails?.find(({ address }) => address === serviceData.email))\n\t\t\t\t) {\n\t\t\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXx gitcoins return 2");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXx gitcoins user 19", user);\n\t\t\t\tif (this.mergeUsers !== true) {\n\t\t\t\t\tthrow new Meteor.Error(\'CustomOAuth\', `User with username ${user.username} already exists`);\n\t\t\t\t}\n\n\t\t\t\tconst serviceIdKey = `services.${serviceName}.id`;\n\t\t\t\tconst update = {\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tname: serviceData.name,\n\t\t\t\t\t\t...(this.keyField === \'username\' && serviceData.email && { emails: [{ address: serviceData.email, verified: true }] }),\n\t\t\t\t\t\t[serviceIdKey]: serviceData.id,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconsole.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXx gitcoins user 20", user);\n\t\t\t\tawait Users.update({ _id: user._id }, update);\n\t\t\t}\n\t\t});\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"XXXXXXXXXXXXXXXXXXXx custom_oauth_server hook hook hook hook hook XXXXXXXXXXXXXXXXXXXXXXXXXXx\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser serviceName 12 365oauth\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser this.name 12 gitlab\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser this.keyField 12 undefined\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser serviceData 12 {\n  _OAuthCustom: true,\n  serverURL: 'https://login.microsoftonline.com/d5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n  accessToken: 'PAQABAQIAAAApTwJmzXqdR4BN2miheQMYlbd5ZfbyIQUX1iW0FWGmFGvyjTFuy2zHZ1PoDvLgz0D6hAas62MopvXHFIhX53amdiH8_8t-SAGJsjr--GeBeY4Xa3CBx4-1Wg6KutRkg6nZPb-tOO-JSvdlEwlJ_QqPbv_MKZjoqiDbbK0AwbeiQmQm7uTxfk_EjiXxJGM5nYGoHNeg6rslqYYROsjEw2mFf3kyYYFEbUstPfc6Mc_4t3I8QJTNfC0NELnnNHP1b3khDyXtWEeYgcG4v9bNu3_s8MuUJmF1Cv1oWG8p7uTAmpmt84aQ5lnkO3fcxH4yLOH_CPcYLa8JU4K6EaqW7qq8rlvFCTQk0EzWDfhDjfSXESY8zylhFyOqRKsuBVlUiQ7FU42ukPbNDtdJEcwgOm1m9KIFEU5EDUB7ljyPwF_nwgXHnhF6tsU0XEFR3hCAsp0_TgGvtE5xR7mNHC59ZrY86QpcgTHC3lXyDj58VGgZTiAA',\n  idToken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyIsImtpZCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyJ9.eyJhdWQiOiJlMzg0NTYxMy0wMzMxLTQ5YzAtOWYxMS1mYjZhNjM0MjQyZDIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9kNWU2ODVhOS0zZTIzLTQyZDktOWVmYS0xNWNjNWMxY2U3ZGIvIiwiaWF0IjoxNzE5NzEwOTM0LCJuYmYiOjE3MTk3MTA5MzQsImV4cCI6MTcxOTcxNDgzNCwiYW1yIjpbInB3ZCIsIm1mYSJdLCJmYW1pbHlfbmFtZSI6Ikd1bXAiLCJnaXZlbl9uYW1lIjoiRm9ycmVzdCIsImlwYWRkciI6IjIyMy4xMDQuNDIuODciLCJuYW1lIjoiRm9ycmVzdCBHdW1wIiwib2lkIjoiOTBmNzU5NmItODhiNi00NzY4LTgyMDQtOGM0NzZhNzNmZTI1IiwicmgiOiIwLkFiY0FxWVhtMVNNLTJVS2UtaFhNWEJ6bjJ4TldoT014QThCSm54SDdhbU5DUXRMOEFQVS4iLCJzdWIiOiJLR2NlTEgtSG9FTklONUg0alZ3d2FMSTJydHBILVMyQ1RuSkNIQTB5MGFrIiwidGlkIjoiZDVlNjg1YTktM2UyMy00MmQ5LTllZmEtMTVjYzVjMWNlN2RiIiwidW5pcXVlX25hbWUiOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1cG4iOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1dGkiOiJGSkI0a0xDRnlVV21ud1ZvdE93OEFRIiwidmVyIjoiMS4wIn0.oGP8qczVpNjzG03en1LmF6BcxOHsSsdU5yNDFDzR7nJsNbnIniPFg8Q9Qr6WWknEvrCGdjMWWf9_7lC6HxK6pr0w28txFOwbPsX_sKFXQBgzTzBUhKuVYmaMv9koFf4UhODyncmDtfiEicBKtOEGf3Rqz534hTXmHXPb9wLIz4_SfmZAa_nuV8my7oBYrrY95rRE-ZfsV5DCoSbu3AiIK4_n21EYfKVE_6J6S46X8r5WeQvLOQ1A4CEZI2lIAToWdT2T1fVYxrsMpNpcfcHtGF6HaD1h_0rmy_QOgZ8nClDI2tx-DnTWLjMoqNCzWFY1p1nLPx_60xqACFqVl_3vdQ',\n  expiresAt: 1719714834151,\n  refreshToken: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.AgABAwEAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P_RBLQedJRbR8Ll3VPCsjY6zuGnnG6AaZjrFXJGr7hxvjrMD8Azvdxc2BPjThB6qx9JVac8azajaKio_azzrov5EgHgPxCoX5tIL4mV-Yg98cVi5Xm8kOrCjUupc6l0qXRec5Eq69VHJwIUyJrsxpPc8LsHYwDNoKhPWm7fBVKUW0g5ifxg_RBAF43MJYrC5z65tgBRmXwsRJ7ZgDBqnXelYWLKgd-3HG5MkuRpv3JB8vxGRSS5kKdEExU0VRXJ08MMVNHIX_bdzFKyf8LYB2V1sU7gxnWnTmDgQAwvS0Asp0XE-nPY9JtUs_NkgsWD_JQEXv40ib3kOXWNf07ZnVD0DC4E-qE2G76CoEq0l0OWjH9EHf_xhLr21skTWRnaRnnQ8UN1dpyNrf5ymSkhxvTXNOCA6xZUV_ZhjZmjPixig0-8Qx8xDV4RTqnM2NiV8KiR9sL156j31PIeGEp5cagk_lbBqxU2XwGJ9hKI5JbkN3Jg_YVltVKpfkdv4hYzlD94hkepWngLi7q5Sn-Zv-LAC4F8WguDTPt6GjTtOCTG3Yl6BuiMDiBy4-xYM_5BhTdJ1ZCF8wAm-o86U1F1bWTGMa7KQksPsb6AGFGpRcAhbxfki6lETARM18DMVaogACUASffA0ppkSAKoRofJ9-EvXWqodItnTtFmW9WurbNjd0otb1BRP_EIJqKDjd4IAgwbNT0h2C4rWUMEji6ET1KgHun7AGAUTF2EnawYpEzYomCR-pM',\n  amr: '[\"pwd\",\"mfa\"]',\n  family_name: 'Gump',\n  given_name: 'Forrest',\n  ipaddr: '223.104.42.87',\n  name: 'Gump',\n  oid: '90f7596b-88b6-4768-8204-8c476a73fe25',\n  rh: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.',\n  sub: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n  tid: 'd5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n  unique_name: 'ForrestGump@Gitcoins.onmicrosoft.com',\n  upn: 'ForrestGump@Gitcoins.onmicrosoft.com',\n  uti: 'H1zdM7Pmbk2z9qeOOQUsAQ',\n  ver: '1.0',\n  id: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n  username: 'Forrest',\n  email: 'ForrestGump@Gitcoins.onmicrosoft.com'\n}\n\n\n\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server hook hook hook hook hook XXXXXXXXXXXXXXXXXXXXXXXXXXx\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser serviceName 12 365oauth\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser this.name 12 365oauth\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser this.keyField 12 username\nXXXXXXXXXXXXXXXXXXXx custom_oauth_server addHookToProcessUser serviceData 12 {\n  _OAuthCustom: true,\n  serverURL: 'https://login.microsoftonline.com/d5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n  accessToken: 'PAQABAQIAAAApTwJmzXqdR4BN2miheQMYlbd5ZfbyIQUX1iW0FWGmFGvyjTFuy2zHZ1PoDvLgz0D6hAas62MopvXHFIhX53amdiH8_8t-SAGJsjr--GeBeY4Xa3CBx4-1Wg6KutRkg6nZPb-tOO-JSvdlEwlJ_QqPbv_MKZjoqiDbbK0AwbeiQmQm7uTxfk_EjiXxJGM5nYGoHNeg6rslqYYROsjEw2mFf3kyYYFEbUstPfc6Mc_4t3I8QJTNfC0NELnnNHP1b3khDyXtWEeYgcG4v9bNu3_s8MuUJmF1Cv1oWG8p7uTAmpmt84aQ5lnkO3fcxH4yLOH_CPcYLa8JU4K6EaqW7qq8rlvFCTQk0EzWDfhDjfSXESY8zylhFyOqRKsuBVlUiQ7FU42ukPbNDtdJEcwgOm1m9KIFEU5EDUB7ljyPwF_nwgXHnhF6tsU0XEFR3hCAsp0_TgGvtE5xR7mNHC59ZrY86QpcgTHC3lXyDj58VGgZTiAA',\n  idToken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyIsImtpZCI6Ik1HTHFqOThWTkxvWGFGZnBKQ0JwZ0I0SmFLcyJ9.eyJhdWQiOiJlMzg0NTYxMy0wMzMxLTQ5YzAtOWYxMS1mYjZhNjM0MjQyZDIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9kNWU2ODVhOS0zZTIzLTQyZDktOWVmYS0xNWNjNWMxY2U3ZGIvIiwiaWF0IjoxNzE5NzEwOTM0LCJuYmYiOjE3MTk3MTA5MzQsImV4cCI6MTcxOTcxNDgzNCwiYW1yIjpbInB3ZCIsIm1mYSJdLCJmYW1pbHlfbmFtZSI6Ikd1bXAiLCJnaXZlbl9uYW1lIjoiRm9ycmVzdCIsImlwYWRkciI6IjIyMy4xMDQuNDIuODciLCJuYW1lIjoiRm9ycmVzdCBHdW1wIiwib2lkIjoiOTBmNzU5NmItODhiNi00NzY4LTgyMDQtOGM0NzZhNzNmZTI1IiwicmgiOiIwLkFiY0FxWVhtMVNNLTJVS2UtaFhNWEJ6bjJ4TldoT014QThCSm54SDdhbU5DUXRMOEFQVS4iLCJzdWIiOiJLR2NlTEgtSG9FTklONUg0alZ3d2FMSTJydHBILVMyQ1RuSkNIQTB5MGFrIiwidGlkIjoiZDVlNjg1YTktM2UyMy00MmQ5LTllZmEtMTVjYzVjMWNlN2RiIiwidW5pcXVlX25hbWUiOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1cG4iOiJGb3JyZXN0R3VtcEBHaXRjb2lucy5vbm1pY3Jvc29mdC5jb20iLCJ1dGkiOiJGSkI0a0xDRnlVV21ud1ZvdE93OEFRIiwidmVyIjoiMS4wIn0.oGP8qczVpNjzG03en1LmF6BcxOHsSsdU5yNDFDzR7nJsNbnIniPFg8Q9Qr6WWknEvrCGdjMWWf9_7lC6HxK6pr0w28txFOwbPsX_sKFXQBgzTzBUhKuVYmaMv9koFf4UhODyncmDtfiEicBKtOEGf3Rqz534hTXmHXPb9wLIz4_SfmZAa_nuV8my7oBYrrY95rRE-ZfsV5DCoSbu3AiIK4_n21EYfKVE_6J6S46X8r5WeQvLOQ1A4CEZI2lIAToWdT2T1fVYxrsMpNpcfcHtGF6HaD1h_0rmy_QOgZ8nClDI2tx-DnTWLjMoqNCzWFY1p1nLPx_60xqACFqVl_3vdQ',\n  expiresAt: 1719714834151,\n  refreshToken: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.AgABAwEAAAApTwJmzXqdR4BN2miheQMYAgDs_wUA9P_RBLQedJRbR8Ll3VPCsjY6zuGnnG6AaZjrFXJGr7hxvjrMD8Azvdxc2BPjThB6qx9JVac8azajaKio_azzrov5EgHgPxCoX5tIL4mV-Yg98cVi5Xm8kOrCjUupc6l0qXRec5Eq69VHJwIUyJrsxpPc8LsHYwDNoKhPWm7fBVKUW0g5ifxg_RBAF43MJYrC5z65tgBRmXwsRJ7ZgDBqnXelYWLKgd-3HG5MkuRpv3JB8vxGRSS5kKdEExU0VRXJ08MMVNHIX_bdzFKyf8LYB2V1sU7gxnWnTmDgQAwvS0Asp0XE-nPY9JtUs_NkgsWD_JQEXv40ib3kOXWNf07ZnVD0DC4E-qE2G76CoEq0l0OWjH9EHf_xhLr21skTWRnaRnnQ8UN1dpyNrf5ymSkhxvTXNOCA6xZUV_ZhjZmjPixig0-8Qx8xDV4RTqnM2NiV8KiR9sL156j31PIeGEp5cagk_lbBqxU2XwGJ9hKI5JbkN3Jg_YVltVKpfkdv4hYzlD94hkepWngLi7q5Sn-Zv-LAC4F8WguDTPt6GjTtOCTG3Yl6BuiMDiBy4-xYM_5BhTdJ1ZCF8wAm-o86U1F1bWTGMa7KQksPsb6AGFGpRcAhbxfki6lETARM18DMVaogACUASffA0ppkSAKoRofJ9-EvXWqodItnTtFmW9WurbNjd0otb1BRP_EIJqKDjd4IAgwbNT0h2C4rWUMEji6ET1KgHun7AGAUTF2EnawYpEzYomCR-pM',\n  amr: '[\"pwd\",\"mfa\"]',\n  family_name: 'Gump',\n  given_name: 'Forrest',\n  ipaddr: '223.104.42.87',\n  name: 'Gump',\n  oid: '90f7596b-88b6-4768-8204-8c476a73fe25',\n  rh: '0.AbcAqYXm1SM-2UKe-hXMXBzn2xNWhOMxA8BJnxH7amNCQtL8APU.',\n  sub: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n  tid: 'd5e685a9-3e23-42d9-9efa-15cc5c1ce7db',\n  unique_name: 'ForrestGump@Gitcoins.onmicrosoft.com',\n  upn: 'ForrestGump@Gitcoins.onmicrosoft.com',\n  uti: 'H1zdM7Pmbk2z9qeOOQUsAQ',\n  ver: '1.0',\n  id: 'KGceLH-HoENIN5H4jVwwaLI2rtpH-S2CTnJCHA0y0ak',\n  username: 'Forrest',\n  email: 'ForrestGump@Gitcoins.onmicrosoft.com'\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"login-from-the-client",children:"Login from the client"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"XXXXXXXXXXXXXXXXXXXXXXXXXXXXx gitcoins return 2\n..................... authenticaiton server Account validateLoginAttemptAsync 10 {\n  type: '365oauth',\n  allowed: true,\n  methodName: 'login',\n  methodArguments: [ { oauth: [Object] } ],\n  user: {\n    _id: 'HMDuxBovxYtNuxtuE',\n    createdAt: 2024-06-05T04:06:25.944Z,\n    services: {\n      email2fa: [Object],\n      email: [Object],\n      resume: [Object],\n      '365oauth': [Object],\n      password: [Object],\n      microsoft356: [Object],\n      emailCode: [Object]\n    },\n    emails: [ [Object] ],\n    type: 'user',\n    roles: [ 'user' ],\n    status: 'offline',\n    active: true,\n    _updatedAt: 2024-06-25T01:51:50.840Z,\n    name: 'Gump',\n    username: 'forrest',\n    __rooms: [ 'GENERAL' ],\n    lastLogin: 2024-06-25T01:51:13.025Z,\n    statusConnection: 'offline',\n    utcOffset: 8,\n    statusText: '',\n    statusDefault: 'online',\n    settings: { profile: {} }\n  },\n  connection: {\n    id: 'hDZQhgrS925j22fZN',\n    close: [Function: close],\n    httpHeaders: {\n      'x-forwarded-port': '80',\n      'x-forwarded-proto': 'https,http',\n      'x-forwarded-host': '212c-34-92-204-228.ngrok-free.app',\n      'x-forwarded-for': '2a11:3:200::2057,127.0.0.1',\n      'sec-fetch-site': 'same-origin',\n      'sec-fetch-mode': 'cors',\n      'sec-fetch-dest': 'empty',\n      'sec-ch-ua-platform': '\"Windows\"',\n      'sec-ch-ua-mobile': '?0',\n      'sec-ch-ua': '\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"',\n      referer: 'https://212c-34-92-204-228.ngrok-free.app/home',\n      priority: 'u=1, i',\n      origin: 'https://212c-34-92-204-228.ngrok-free.app',\n      'content-type': 'application/json',\n      'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7',\n      'accept-encoding': 'gzip, deflate, br, zstd',\n      accept: 'application/json',\n      'content-length': '232',\n      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36',\n      host: '212c-34-92-204-228.ngrok-free.app',\n      connection: 'keep-alive'\n    },\n    clientAddress: '127.0.0.1',\n    token: undefined\n  }\n}\nException while invoking method login errorClass [Error]: TOTP Required [totp-required]\n    at app/2fa/server/code/index.ts:211:9\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at app/2fa/server/loginHandler.ts:44:3\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at lib/callbacks/callbacksBase.ts:68:5\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at app/authentication/server/startup/index.js:434:7\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at app/authentication/server/startup/index.js:455:17\n    at packages/callback-hook/hook.js:177:18\n    at packages/meteor.js:365:18\n    at packages/accounts-base/accounts_server.js:226:15\n    at Hook.forEach (packages/callback-hook/hook.js:124:15)\n    at AccountsServer._validateLogin (packages/accounts-base/accounts_server.js:223:29)\n    at packages/accounts-base/accounts_server.js:473:10\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at packages/accounts-base/accounts_server.js:653:7\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at packages/meteor.js:367:22\n    at Meteor.EnvironmentVariable.EVp.withValue (packages/meteor.js:1389:31)\n    at packages/ddp-server/livedata_server.js:1854:36\n    at new Promise (<anonymous>)\n    at Server.applyAsync (packages/ddp-server/livedata_server.js:1853:12)\n    at Server.callAsync (packages/ddp-server/livedata_server.js:1779:17)\n    at app/api/server/v1/misc.ts:620:33\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40\n => awaited here:\n    at Function.Promise.await (/home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/promise_server.js:56:12)\n    at app/api/server/v1/misc.ts:620:17\n    at /home/gitcoins/.meteor/packages/promise/.0.12.2.1v51k7w.6dob++os+web.browser+web.browser.legacy+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:43:40 {\n  isClientSafe: true,\n  error: 'totp-required',\n  reason: 'TOTP Required',\n  details: {\n    method: 'email',\n    codeGenerated: true,\n    emailOrUsername: 'forrest',\n    availableMethods: [ 'email' ]\n  },\n  errorType: 'Meteor.Error'\n}\n====== BEGIN MAIL #34 ======\n(Mail not sent; to enable sending, set the MAIL_URL environment variable.)\nContent-Type: multipart/alternative;\n boundary=\"--_NmP-7245379ef3eb6267-Part_1\"\nTo: ForrestGump@gitcoins.onmicrosoft.com\nSubject: Authentication code\nMessage-ID: <b062f356-f598-1d0e-d7e4-5728ab80ebaa@rocket-chat-server>\nDate: Sun, 30 Jun 2024 01:34:00 +0000\nMIME-Version: 1.0\n\n----_NmP-7245379ef3eb6267-Part_1\nContent-Type: text/plain; charset=utf-8\nContent-Transfer-Encoding: 7bit\n\n\nHere is your authentication code:\n\n274-035\n"})}),"\n",(0,o.jsx)(t.admonition,{title:"JitPack or Sonatype OSSRH?",type:"info",children:(0,o.jsxs)(t.p,{children:["The simplest choice would be ",(0,o.jsx)(t.a,{href:"https://jitpack.io/",children:"JitPack"}),", which might not give you much in terms of customization or control, but is very easy to get started with. All you have to do is publish your project on GitHub, and JitPack should be able to build and distribute it immediately. If you\u2019re new to libraries, this is a great choice for getting your code out there."]})}),"\n",(0,o.jsx)(t.admonition,{title:"Help",type:"warning",children:(0,o.jsxs)(t.p,{children:["I try to use JitPack but failed to config. If you success to use JitPack in the ",(0,o.jsx)(t.a,{href:"https://github.com/GetStream/stream-chat-android",children:"Android SDK for Stream Chat"}),", please let me know. Thanks."]})}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"Here's a quick overview of the steps we'll go through:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Registering a Jira account with Sonatype, and verifying your ownership of the group ID you want to publish your artifact with"}),"\n",(0,o.jsx)(t.li,{children:"Generating a GPG key pair for signing your artifacts, publishing your public key, and exporting your private key"}),"\n",(0,o.jsx)(t.li,{children:"Setting up Gradle tasks that can sign upload your artifacts to a staging repository"}),"\n",(0,o.jsx)(t.li,{children:"Manually going through the process of checking your artifacts in the staging repo and releasing them via the Sonatype web UI"}),"\n",(0,o.jsx)(t.li,{children:"Automating the close & release flow with a Gradle plugin"}),"\n",(0,o.jsx)(t.li,{children:"Configuring CI workflows with GitHub Actions to automate all of the above\nA lot of ground to cover - let\u2019s go!"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"After choosing a language and an avatar, you\u2019ll end up on this landing page - click on Create an issue"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Summary"}),": Create repository for your.group.id.here"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Description"}),": An optional, quick summary of what your project is."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Group Id"}),": Your group ID, as described a few sections earlier."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Project URL"}),": If your project has a webpage, the URL of that page. This can also be just the GitHub repository."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"SCM url"}),": Your source control URL, i.e. the GitHub repository link."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Username(s)"}),": If you want additional users (on top of the one you\u2019re using for this process) to have deploy access for your group ID, you can list them here."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Already Synced to Central"}),": If you\u2019re just getting started, this should be No."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Soon after opening it, your issue will get a comment telling you to verify that you own the domain corresponding to your group ID. To comply with this, add the required TXT record to your domain - how to do this will depend on where your domain is registered, but it should be a fairly simple task. Login to the ",(0,o.jsx)(t.a,{href:"https://dcc.godaddy.com/control/portfolio/gitcoins.io/settings",children:"goDaddy"})," to set the TXT record with the guide from ",(0,o.jsx)(t.a,{href:"https://issues.sonatype.org/browse/OSSRH-97587",children:"the issue created"})," in jira for Sonatype."]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},71670:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var o=n(27378);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);